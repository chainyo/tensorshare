[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
name = "tensorshare"
description = "🤝 Trade any tensors over the network"
readme = "README.md"
requires-python = ">=3.8,<3.12"
license = "MIT"
authors = [{name = "Thomas Chaigneau", email = "t.chaigneau.tc@gmail.com"}]
classifiers = [
  "Topic :: Internet",
  "Topic :: Software Development :: Libraries :: Application Frameworks",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "pydantic>=2.1.1",
  "safetensors>=0.3.1",
]
dynamic = ["version"]
keywords = [
  "deep learning",
  "machine-learning",
  "artificial intelligence",
  "safetensors",
  "pydantic",
  "fastapi",
  "pytorch",
  "numpy",
  "jax",
  "paddlepaddle",
  "tensorflow",
  "network",
]


[project.urls]
Documentation = "https://chainyo.github.io/tensorshare"
Issues = "https://github.com/chainyo/tensorshare/issues"
Source = "https://github.com/chainyo/tensorshare"

[tool.hatch.version]
path = "src/tensorshare/__init__.py"

[project.optional-dependencies]
client = ["aiohttp>=3.8.5"]
server = ["fastapi>=0.101.1"]
torch = ["torch>=1.10", "numpy>=1.21.6"]
numpy = ["numpy>=1.21.6"]
# tensorflow = ["tensorflow", "numpy>=1.21.6"]  Disable until 2.14 is released for pydantic v2 compatibility
jax = ["flax>=0.6.3", "jax<0.4.14", "jaxlib<0.4.14", "numpy>=1.21.6"]
paddlepaddle = ["paddlepaddle>=2.4.1", "numpy>=1.21.6"]
docs = [
  "mkdocs>=1.4.0",
  "mkdocs-material>=8.5.4",
  "mkdocs-git-revision-date-localized-plugin>=1.1.0",
  "mkdocstrings[python]>=0.20.0",
]
quality = [
  "black~=22.10.0",
  "ruff~=0.0.263",
  "mypy>=1.4",
  "pre-commit~=2.20.0",
]
tests = [
  "aioresponses>=0.7.4",
  "aiohttp>=3.8.5",
  "fastapi>=0.101.1",
  "flax>=0.6.3",
  "httpx >=0.23.0",
  "jax<0.4.14",
  "jaxlib<0.4.14",
  "numpy>=1.21.6",
  "paddlepaddle>=2.4.1",
  "pytest>=7.4",
  "pytest-asyncio>=0.21.1",
  "pytest-cov>=4.1",
  # "tensorflow",
  "torch>=1.10",
]
# To install all optional modules and backends dependencies: pip install tensorshare[all]
all = [
  "aiohttp>=3.8.5",
  "fastapi>=0.101.1",
  "flax>=0.6.3",
  "jax<0.4.14",
  "jaxlib<0.4.14",
  "numpy>=1.21.6",
  "paddlepaddle>=2.4.1",
  # "tensorflow",
  "torch>=1.10",
]
# To install all the dependencies for development purposes: pip install -e ".[dev]"
dev = [
  "black~=22.10.0",
  "fastapi>=0.101.1",
  "flax>=0.6.3",
  "jax<0.4.14",
  "jaxlib<0.4.14",
  "mkdocs~=1.4.0",
  "mkdocs-material~=8.5.4",
  "mkdocs-git-revision-date-localized-plugin~=1.1.0",
  "mkdocstrings[python]~=0.19.0",
  "pre-commit~=2.20.0",
  "pytest>=7.4",
  "pytest-cov>=4.1",
  "ruff~=0.0.263",
  "numpy>=1.21.6",
  "paddlepaddle>=2.4.1",
  # "tensorflow",
  "torch>=1.10",
]

[tool.mypy]
python_version = "3.8"
check_untyped_defs = true
ignore_missing_imports = true
warn_return_any = true

[tool.hatch.envs.quality]
features = [
  "quality",
]

[tool.hatch.envs.quality.scripts]
check = [
  "black --check --diff --preview src tests",
  "ruff src tests",
]
format = [
  "black --preview src tests",
  "ruff --fix src tests",
  "check",
]
typecheck = [
  "mypy src --install-types --non-interactive",
]

[tool.ruff]
ignore = [
  "E501", # line too long, handled by black
  "B008", # do not perform function calls in argument defaults
  "C901", # too complex
]
select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "I", # isort
  "C", # flake8-comprehensions
  "B", # flake8-bugbear
]

[tool.ruff.isort]
known-first-party = ["tensorshare"]

[tool.hatch.envs.tests]
features = [
  "tests",
]

[tool.hatch.envs.tests.scripts]
run = "pytest --cov=tensorshare --cov-report=term-missing tests/ --durations 0 -s -vv"

[[tool.hatch.envs.tests.matrix]]
python = ["38", "39", "310", "311"]

[tool.hatch.envs.docs]
features = [
  "docs",
]

[tool.hatch.envs.docs.scripts]
build = [
  "mkdocs build",
]
serve = [
  "mkdocs serve",
]

[tool.hatch.build.targets.sdist]
exclude = [
  "/.github",
  "/.vscode",
  "/docs",
  "/.devcontainer",
  "/.pre-commit-config.yaml",
  "/.gitignore",
  "/tests",
  "/Dockerfile",
  "/.dockerignore",
]
